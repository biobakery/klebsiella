README

1.  make_bam.sh

This step creates an index from WGLW5-fix.fa (reference), aligns each strain's reads into a sam file, sorts the sam,
and creates a bam for each strain.

Prerequisite: bowtie2, samtools, fastqs for each strain.
Usage: sh make_bam.sh
Inputs: all the fastqs for each strain, gzipped, in the directory "data".
Outputs: a *-sorted.bam and *-sorted.bai for each strain *.

Note: the fastq.gz are not included and need to be downloaded from **URL**.

2. coverage-bed.sh (formerly bed.sh)

This step calculates coverage gaps for each strain and creates a bed file for each strain, showing the coverage gaps.

Usage: sh coverage-bed.sh

Prerequisite: bedtools
Inputs: the *-sorted.bam files for each strain produced in step 1.
Outputs: *-gaps.bed for each strain.

3. make_protein_bam.sh

This step calculates the coverage of each strain's reads over each strain's proteins (as predicted by Prokka).

Usage: sh make_protein_bam.sh

Prerequisite: bowtie2, samtools, the prokka outputs and fastq reads (must be downloaded from **URL** and placed in directory data/PROKKA) 

Inputs: prokka output ffn files, fastq files.
Outputs: .bam files of reads to genes, pairwise for each strain.

4. parse-protein-bams.sh

This step combines bedtools and accessory perl scripts (parse-coverage.pl, collate-coverage.pl) to calculate the per-base coverage at each position 
for each protein, and then calculate the median & standard deviation coverage for each gene (parse-coverage.pl) and process each .cov 
file into one nicely-formatted table (collate-coverage.pl).  

Prerequisites: Step 3 outputs, bedtools, perl Math::NumberCruncher.

Inputs: step 3 outputs.
Outputs: *.cov coverage files (in directory data/tmp), an output file named "data_table.txt" which has results (coverage per gene) 

usage: sh parse-protein-bams.sh

5. filter.pl

This script applies a 2 IQR-based filter (25th percentile - 2 IQR) to data_table.txt to filter out genes with low coverage.

Prereqs: output from step 4.

usage: perl filter.pl data_table.txt > CoverageFiltered.txt

6. summary.sh

Prints some useful statistics about gene presence / absence in strains, based on step 5 output.
Prereqs: Step 5 output.

usage: sh summary.sh


7. contiguator.sh

This step runs Contiguator on the assembled scaffolds for each strain, aligning them to the WGLW5-fix scaffold.
A 5kb minimum length cutoff is imposed. 

Usage: sh contiguator.sh

Prerequisite: Contiguator installed & added to path (see shell script)
Inputs: the scaffolds for each strain.
Outputs: Contiguator PDFs and alignment descriptions.

8. feature-beds.sh

This script creates bed files of each strain's features and contig boundaries relative to the reference genome.
It uses blat, prokka outputs, and contiguator outputs. It is useful for visualization (e.g. in IGV).

Usage: sh feature-beds.sh

Prerequisite: Blat. Outputs from step 3. Prokka outputs (need to be downloaded from **URL**). 



